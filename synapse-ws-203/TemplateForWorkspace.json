{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "synapse-ws-203"
		},
		"AzureSqlCustomerDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlCustomerDatabase'"
		},
		"AzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase'"
		},
		"AzureSynapseDataLake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureSynapseDataLake'"
		},
		"CustomerProfileCosmosDb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CustomerProfileCosmosDb'"
		},
		"FileShareLink_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'FileShareLink'"
		},
		"synapse-ws-203-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'synapse-ws-203-WorkspaceDefaultSqlServer'"
		},
		"AzureSynapseDataLake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlstoragesynapse203.dfs.core.windows.net"
		},
		"synapse-ws-203-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlstoragesynapse203.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/CopyJSONtoSQL')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "adlsynapsecontainer/synapse/workspaces/synapse-ws-203/Stage/Customer Profile/Customer Profile.json"
							},
							{
								"name": "Destination",
								"value": "dbo.DimCustomer"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['CustomerID']"
										},
										"sink": {
											"name": "CustomerID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['Title']"
										},
										"sink": {
											"name": "Title",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['FirstName']"
										},
										"sink": {
											"name": "FirstName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['MiddleName']"
										},
										"sink": {
											"name": "MiddleName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['LastName']"
										},
										"sink": {
											"name": "LastName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Suffix']"
										},
										"sink": {
											"name": "Suffix",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CompanyName']"
										},
										"sink": {
											"name": "CompanyName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SalesPerson']"
										},
										"sink": {
											"name": "SalesPerson",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EmailAddress']"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Phone']"
										},
										"sink": {
											"name": "Phone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['InsertedDate']"
										},
										"sink": {
											"name": "InsertedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['ModifiedDate']"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['HashKey']"
										},
										"sink": {
											"name": "HashKey",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ADL_Customer_Store",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CustomerSQLSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ADL_Customer_Store')]",
				"[concat(variables('workspaceId'), '/datasets/CustomerSQLSource')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CopyTransactiontoAnalyticCDB')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "CopyTransactiontoAnalyticCDB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"preferredRegions": []
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['customerid']"
										},
										"sink": {
											"path": "customerid"
										}
									},
									{
										"source": {
											"path": "$['First Name']"
										},
										"sink": {
											"path": "FirstName"
										}
									},
									{
										"source": {
											"path": "$['Middle Name']"
										},
										"sink": {
											"path": "MiddleName"
										}
									},
									{
										"source": {
											"path": "$['Last Name']"
										},
										"sink": {
											"path": "LastName"
										}
									},
									{
										"source": {
											"path": "$['Company Name']"
										},
										"sink": {
											"path": "CompanyName"
										}
									},
									{
										"source": {
											"path": "$['email']"
										},
										"sink": {
											"path": "email"
										}
									},
									{
										"source": {
											"path": "$['Phone']"
										},
										"sink": {
											"path": "Phone"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CustomerProfileCDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CustomerAnalyticCosmosStore",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-07-04T19:46:35Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/CustomerProfileCDB')]",
				"[concat(variables('workspaceId'), '/datasets/CustomerAnalyticCosmosStore')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ELTL_Example')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Check if source db exist",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "CustomerSQLSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Move data to ADLS Stage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Check if source db exist",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.DimCustomer"
							},
							{
								"name": "Destination",
								"value": "adlsynapsecontainer/synapse/workspaces/synapse-ws-203/Stage/Customer Profile/Customer Profile"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerID",
											"type": "Int32"
										},
										"sink": {
											"path": "$['CustomerID']"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String"
										},
										"sink": {
											"path": "$['Title']"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String"
										},
										"sink": {
											"path": "$['FirstName']"
										}
									},
									{
										"source": {
											"name": "MiddleName",
											"type": "String"
										},
										"sink": {
											"path": "$['MiddleName']"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String"
										},
										"sink": {
											"path": "$['LastName']"
										}
									},
									{
										"source": {
											"name": "Suffix",
											"type": "String"
										},
										"sink": {
											"path": "$['Suffix']"
										}
									},
									{
										"source": {
											"name": "CompanyName",
											"type": "String"
										},
										"sink": {
											"path": "$['CompanyName']"
										}
									},
									{
										"source": {
											"name": "SalesPerson",
											"type": "String"
										},
										"sink": {
											"path": "$['SalesPerson']"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String"
										},
										"sink": {
											"path": "$['EmailAddress']"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String"
										},
										"sink": {
											"path": "$['Phone']"
										}
									},
									{
										"source": {
											"name": "InsertedDate",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['InsertedDate']"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['ModifiedDate']"
										}
									},
									{
										"source": {
											"name": "HashKey",
											"type": "String"
										},
										"sink": {
											"path": "$['HashKey']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CustomerSQLSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADL_Customer_Store",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Transform Data",
						"type": "SynapseNotebook",
						"dependsOn": [
							{
								"activity": "Move data to ADLS Stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "Customer Data Transform",
								"type": "NotebookReference"
							},
							"snapshot": true
						}
					},
					{
						"name": "Load Data to Azure Synapse",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Transform Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "adlsynapsecontainer/synapse/workspaces/synapse-ws-203/Stage/temp/Customer Profile/part-00000-c0cc786f-7adc-4f77-8746-570b5cb77bd8-c000.json"
							},
							{
								"name": "Destination",
								"value": "dbo.CustomerProfileDW"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['CompanyName']"
										},
										"sink": {
											"name": "CompanyName"
										}
									},
									{
										"source": {
											"path": "$['CustomerID']"
										},
										"sink": {
											"name": "CustomerID"
										}
									},
									{
										"source": {
											"path": "$['EmailAddress']"
										},
										"sink": {
											"name": "EmailAddress"
										}
									},
									{
										"source": {
											"path": "$['FirstName']"
										},
										"sink": {
											"name": "FirstName"
										}
									},
									{
										"source": {
											"path": "$['HashKey']"
										},
										"sink": {
											"name": "HashKey"
										}
									},
									{
										"source": {
											"path": "$['InsertedDate']"
										},
										"sink": {
											"name": "InsertedDate"
										}
									},
									{
										"source": {
											"path": "$['LastName']"
										},
										"sink": {
											"name": "LastName"
										}
									},
									{
										"source": {
											"path": "$['MiddleName']"
										},
										"sink": {
											"name": "MiddleName"
										}
									},
									{
										"source": {
											"path": "$['ModifiedDate']"
										},
										"sink": {
											"name": "ModifiedDate"
										}
									},
									{
										"source": {
											"path": "$['Phone']"
										},
										"sink": {
											"name": "Phone"
										}
									},
									{
										"source": {
											"path": "$['SalesPerson']"
										},
										"sink": {
											"name": "SalesPerson"
										}
									},
									{
										"source": {
											"path": "$['Suffix']"
										},
										"sink": {
											"name": "Suffix"
										}
									},
									{
										"source": {
											"path": "$['Title']"
										},
										"sink": {
											"name": "Title"
										}
									},
									{
										"source": {
											"path": "$['Full Name']"
										},
										"sink": {
											"name": "FullName"
										}
									},
									{
										"source": {
											"path": "$['Customer Since']"
										},
										"sink": {
											"name": "CustomerSince"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ADL_temp_customer_profile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSynapseDW",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/CustomerSQLSource')]",
				"[concat(variables('workspaceId'), '/datasets/ADL_Customer_Store')]",
				"[concat(variables('workspaceId'), '/notebooks/Customer Data Transform')]",
				"[concat(variables('workspaceId'), '/datasets/ADL_temp_customer_profile')]",
				"[concat(variables('workspaceId'), '/datasets/AzureSynapseDW')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADL_Customer_Store')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Customer Profile.json",
						"folderPath": "synapse/workspaces/synapse-ws-203/Stage/Customer Profile",
						"fileSystem": "adlsynapsecontainer"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADL_temp_customer_profile')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "part-00000-c0cc786f-7adc-4f77-8746-570b5cb77bd8-c000.json",
						"folderPath": "synapse/workspaces/synapse-ws-203/Stage/temp/Customer Profile",
						"fileSystem": "adlsynapsecontainer"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"CompanyName": {
							"type": "string"
						},
						"CustomerID": {
							"type": "integer"
						},
						"EmailAddress": {
							"type": "string"
						},
						"FirstName": {
							"type": "string"
						},
						"HashKey": {
							"type": "string"
						},
						"InsertedDate": {
							"type": "string"
						},
						"LastName": {
							"type": "string"
						},
						"MiddleName": {
							"type": "string"
						},
						"ModifiedDate": {
							"type": "string"
						},
						"Phone": {
							"type": "string"
						},
						"SalesPerson": {
							"type": "string"
						},
						"Title": {
							"type": "string"
						},
						"Suffix": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseAnalyticsCustomerTable1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-ws-203-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "SQLPool01"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "customer"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-ws-203-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseDW')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-ws-203-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "SQLPool01"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "CustomerProfileDW"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-ws-203-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CustomerAnalyticCosmosStore')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CustomerProfileCosmosDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "CustomerProfileHTAP"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CustomerProfileCosmosDb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CustomerPSV')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileShareLink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation",
						"fileName": "Customer Source with Schema.csv"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "MiddleName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Suffix",
						"type": "String"
					},
					{
						"name": "CompanyName",
						"type": "String"
					},
					{
						"name": "SalesPerson",
						"type": "String"
					},
					{
						"name": "EmailAddress",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/FileShareLink')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CustomerProfileCDB')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CustomerProfileCosmosDb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "OnlineCustomerProfile"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CustomerProfileCosmosDb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CustomerSQLSource')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "InsertedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "HashKey",
						"type": "char"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimCustomer"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlCustomerDatabase')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlCustomerDatabase_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseDataLake')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureSynapseDataLake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureSynapseDataLake_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CustomerProfileCosmosDb')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CustomerProfileCosmosDb_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/FileShareLink')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('FileShareLink_connectionString')]",
					"fileShare": "adf-data"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapse-ws-203-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('synapse-ws-203-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapse-ws-203-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('synapse-ws-203-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Customer Data Transform')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"bigDataPool": {
					"referenceName": "Sparkpool01",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/dfdd1e1e-cc1c-4d58-9de5-fa4d6dca2b1a/resourceGroups/myDataEngineerResources/providers/Microsoft.Synapse/workspaces/synapse-ws-203/bigDataPools/Sparkpool01",
						"name": "Sparkpool01",
						"type": "Spark",
						"endpoint": "https://synapse-ws-203.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Sparkpool01",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 4,
						"cores": 4,
						"memory": 28
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\r\n",
							"df = spark.read.load('abfss://adlsynapsecontainer@adlstoragesynapse203.dfs.core.windows.net/synapse/workspaces/synapse-ws-203/Stage/Customer Profile/Customer Profile.json', format='json')\r\n",
							"display(df.limit(2))\r\n",
							""
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"from pyspark.sql.functions import lit,  array, concat, col\r\n",
							"\r\n",
							"df1 = df.na.fill(\"\")\r\n",
							"# df1 = df1.withColumn(\"Full Name\", array(\"FirstName\", \"LastName\"))\r\n",
							"\r\n",
							"# arr = df1.select(concat(col(\"FirstName\"),lit(' '),col(\"MiddleName\"),lit(' '),col(\"LastName\")))\r\n",
							"# print(arr)\r\n",
							"\r\n",
							"# df1 = df1.withColumn(\"Full Name\", concat(col(\"FirstName\"),lit(' '),col(\"MiddleName\"),lit(' '),col(\"LastName\")))\r\n",
							"\r\n",
							"df1 = df1.withColumn(\"Full Name\", concat(\"FirstName\", lit(' '), \"MiddleName\", lit(' '), \"LastName\"))\r\n",
							"\r\n",
							"display(df1.limit(2))\r\n",
							"\r\n",
							""
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"from datetime import date\r\n",
							"from pyspark.sql.functions import year, month, dayofmonth, when\r\n",
							"import numpy as np\r\n",
							"\r\n",
							"curr_year = date.today().year\r\n",
							"curr_month = date.today().month\r\n",
							"curr_day = date.today().day\r\n",
							"# print(curr_day)\r\n",
							"\r\n",
							"\r\n",
							"#df1.select(\r\n",
							" #   year(\"InsertedDate\").alias('year'), \r\n",
							"  #  month(\"InsertedDate\").alias('month'), \r\n",
							"   # dayofmonth(\"InsertedDate\").alias('day')\r\n",
							"#).show()\r\n",
							"\r\n",
							"df1 = df1.withColumn(\"Customer Since\", when(year(\"InsertedDate\") == lit(curr_year), when(month(\"InsertedDate\") == lit(curr_month), concat(lit(curr_day) - dayofmonth(\"InsertedDate\"), lit(\" days\"))).otherwise(concat(lit(curr_month) - month(\"InsertedDate\"), lit(\" months\")))).otherwise(concat(lit(curr_year) - year(\"InsertedDate\"), lit(\" years\"))))\r\n",
							"display(df1.limit(2))\r\n",
							"\r\n",
							"# print( df1.select(\"InsertedDate\").collect()[0][0])\r\n",
							"# dfarray = np.array(df1.collect())\r\n",
							"# print(dfarray[0][5])\r\n",
							""
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"df1.write.mode('overwrite').format('json').save('abfss://adlsynapsecontainer@adlstoragesynapse203.dfs.core.windows.net/synapse/workspaces/synapse-ws-203/Stage/temp/Customer Profile/')"
						],
						"outputs": [],
						"execution_count": 6
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Flatten nested structures and explode array')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "Sparkpool01",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/dfdd1e1e-cc1c-4d58-9de5-fa4d6dca2b1a/resourceGroups/myDataEngineerResources/providers/Microsoft.Synapse/workspaces/synapse-ws-203/bigDataPools/Sparkpool01",
						"name": "Sparkpool01",
						"type": "Spark",
						"endpoint": "https://synapse-ws-203.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Sparkpool01",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							}
						},
						"source": [
							"%%pyspark\r\n",
							"df = spark.read.load('abfss://adlsynapsecontainer@adlstoragesynapse203.dfs.core.windows.net/synapse/workspaces/synapse-ws-203/data/online-user-profile.json', format='json')\r\n",
							"display(df.limit(10))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from pyspark.sql.functions import udf, explode\r\n",
							"\r\n",
							"flat=df.select('visitorId',explode('topProductPurchases').alias('topProductPurchases_flat'))\r\n",
							"flat.show(100)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"topPurchases = (flat.select('visitorId','topProductPurchases_flat.productId','topProductPurchases_flat.itemsPurchasedLast12Months')\r\n",
							"    .orderBy('visitorId'))\r\n",
							"\r\n",
							"topPurchases.show(100)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"# Let's order by the number of items purchased in the last 12 months\r\n",
							"sortedTopPurchases = topPurchases.orderBy(\"itemsPurchasedLast12Months\")\r\n",
							"\r\n",
							"display(sortedTopPurchases.limit(100))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"sortedTopPurchases = (topPurchases\r\n",
							"    .orderBy( col(\"itemsPurchasedLast12Months\").desc() ))\r\n",
							"\r\n",
							"display(sortedTopPurchases.limit(100))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"groupedTopPurchases = (sortedTopPurchases.select(\"visitorId\")\r\n",
							"    .groupBy(\"visitorId\")\r\n",
							"    .agg(count(\"*\").alias(\"total\"))\r\n",
							"    .orderBy(\"visitorId\") )\r\n",
							"\r\n",
							"display(groupedTopPurchases.limit(100))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"groupedTopPurchases = (sortedTopPurchases.select(\"visitorId\",\"itemsPurchasedLast12Months\")\r\n",
							"    .groupBy(\"visitorId\")\r\n",
							"    .agg(sum(\"itemsPurchasedLast12Months\").alias(\"totalItemsPurchased\"))\r\n",
							"    .orderBy(\"visitorId\") )\r\n",
							"\r\n",
							"groupedTopPurchases.show(100)"
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LoadCosmosHTAPDf')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "Sparkpool01",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/dfdd1e1e-cc1c-4d58-9de5-fa4d6dca2b1a/resourceGroups/myDataEngineerResources/providers/Microsoft.Synapse/workspaces/synapse-ws-203/bigDataPools/Sparkpool01",
						"name": "Sparkpool01",
						"type": "Spark",
						"endpoint": "https://synapse-ws-203.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Sparkpool01",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"automaticScaleJobs": false
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {},
						"source": [
							"# Read from Cosmos DB analytical store into a Spark DataFrame and display 10 rows from the DataFrame\n",
							"# To select a preferred list of regions in a multi-region Cosmos DB account, add .option(\"spark.cosmos.preferredRegions\", \"<Region1>,<Region2>\")\n",
							"\n",
							"df = spark.read\\\n",
							"    .format(\"cosmos.olap\")\\\n",
							"    .option(\"spark.synapse.linkedService\", \"CustomerProfileCosmosDb\")\\\n",
							"    .option(\"spark.cosmos.container\", \"CustomerProfileHTAP\")\\\n",
							"    .load()\n",
							"\n",
							"display(df.limit(10))"
						],
						"outputs": [],
						"execution_count": 1
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AnalyseCosmosH')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"metadata": {
					"language_info": {
						"name": "python"
					}
				},
				"cells": []
			},
			"dependsOn": []
		}
	]
}